{"version":3,"sources":["components/utils/fadeIn.jsx","components/img/web_admin_dashboard.PNG","components/utils/moreDescription.jsx","components/content.jsx"],"names":["FadeIn","start","children","props","items","React","Children","toArray","trail","useTrail","length","config","wobbly","opacity","x","height","from","className","map","index","rest","div","style","transform","interpolate","span","MoreDescription","Accordion","Collapse","eventKey","Toggle","as","Button","variant","Content","useInView","inView","ref","useState","set","onChange","state","id","src","img1","alt","tag","href"],"mappings":"wKA0BeA,IAvBA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAaC,EAAY,oCACxCC,EAAQC,IAAMC,SAASC,QAAQL,GAC/BM,EAAQC,YAASL,EAAMM,OAAQ,CACjCC,OAAQA,IAAOC,OACfC,QAASZ,EAAQ,EAAI,EACrBa,EAAGb,EAAQ,EAAI,GACfc,OAAQd,EAAQ,IAAM,EACtBe,KAAM,CAAEH,QAAS,EAAGC,EAAG,GAAIC,OAAQ,KAEvC,OACI,6CAAKE,UAAU,6CAAgDd,GAA/D,aACKK,EAAMU,KAAI,WAAyBC,GAAzB,IAAGL,EAAH,EAAGA,EAAGC,EAAN,EAAMA,OAAWK,EAAjB,qCACP,cAAC,IAASC,IAAV,CAEIJ,UAAU,cACVK,MAAK,2BAAOF,GAAP,IAAaG,UAAWT,EAAEU,aAAY,SAACV,GAAD,8BAAwBA,EAAxB,cAH/C,SAII,cAAC,IAASW,KAAV,CAAeH,MAAO,CAAEP,UAAxB,SAAmCX,EAAMe,MAHpC,CAACA,Y,0DChBX,MAA0B,gD,uCCkB1BO,EAfS,WACpB,OACI,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAUC,SAAX,CAAoBC,SAAS,IAA7B,SACI,0RAMA,cAACF,EAAA,EAAUG,OAAX,CAAkBC,GAAIC,IAAQC,QAAQ,OAAOJ,SAAS,IAAtD,yBCgCDK,UAvCC,WAAO,IAAD,EACMC,YAAU,IAA1BC,EADU,EACVA,OAAQC,EADE,EACFA,IADE,EAEJC,oBAAS,GAAhBC,EAFW,oBAKlB,OACI,sBAAKtB,UAAU,iBAAf,UACI,cAAC,IAAD,CAAQhB,MAAOmC,EAAQI,SAAU,kBAAMD,GAAI,SAACE,GAAD,OAAYA,MAAvD,SACI,sBAAMC,GAAG,iBAAiBL,IAAKA,EAAKpB,UAAU,yCAA9C,wBAEJ,sBAAKA,UAAU,mCAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAK0B,IAAKC,EAAM3B,UAAU,wBAAwB4B,IAAI,yBAE1D,sBAAK5B,UAAU,eAAf,UACI,oBAAIA,UAAU,OAAd,4BACA,qBAAKA,UAAU,cAAcyB,GAAG,OAAhC,SAbH,CAAC,MAAO,WAAY,QAAS,UAchBxB,KAAI,SAAA4B,GAAG,OAAI,oBAAc7B,UAAU,OAAxB,SAAgC6B,GAAvBA,QAE9B,6BAAY7B,UAAU,0BAAtB,UACI,kCACK,yCADL,oGAEa,mBAAG8B,KAAK,wBAAR,uBAFb,uDAKA,cAAC,EAAD,IAEA,gEACmC,mBAAGA,KAAK,qDAAR,uBAGnC,wBAAQ9B,UAAU,qCAAlB","file":"static/js/7.6172a3da.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useTrail, animated, config } from \"react-spring\";\r\n\r\nconst FadeIn = ({ start, children, ...props }) => {\r\n    const items = React.Children.toArray(children)\r\n    const trail = useTrail(items.length, {\r\n        config: config.wobbly,\r\n        opacity: start ? 1 : 0,\r\n        x: start ? 0 : 20,\r\n        height: start ? 200 : 0,\r\n        from: { opacity: 0, x: 20, height: 0 },\r\n    })\r\n    return (\r\n        <div className=\"trails-main d-flex justify-content-center\" {...props}>\r\n            {trail.map(({ x, height, ...rest }, index) => (\r\n                <animated.div\r\n                    key={[index]}\r\n                    className=\"trails-text\"\r\n                    style={{ ...rest, transform: x.interpolate((x) => `translate3d(0,${x}px,0)`) }}>\r\n                    <animated.span style={{ height }}>{items[index]}</animated.span>\r\n                </animated.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FadeIn;","export default __webpack_public_path__ + \"static/media/web_admin_dashboard.c8c97775.PNG\";","import React from 'react';\r\nimport { Accordion, Button } from \"react-bootstrap\";\r\n\r\nconst MoreDescription = () => {\r\n    return (\r\n        <Accordion>\r\n            <Accordion.Collapse eventKey=\"0\">\r\n                <p>\r\n                    This CBT, have ability to use import data with spreadsheet for lists of student or tests subject.\r\n                    In test deployment you could randomize questions, have many ways to upload tests subject.\r\n                    And of course, client-side android application for student.\r\n                </p>\r\n            </Accordion.Collapse>\r\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">More...</Accordion.Toggle>\r\n        </Accordion>\r\n    );\r\n}\r\n\r\nexport default MoreDescription;","import React, { useState } from 'react';\r\nimport img1 from './img/web_admin_dashboard.PNG'\r\nimport { useInView } from 'react-intersection-observer';\r\nimport FadeIn from './utils/fadeIn';\r\nimport MoreDescription from './utils/moreDescription';\r\n\r\nconst Content = () => {\r\n    const { inView, ref } = useInView({})\r\n    const [set] = useState(true)\r\n    const tags = [\"CBT\", \"Anasihin\", \"ujian\", \"online\"]\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <FadeIn start={inView} onChange={() => set((state) => !state)}>\r\n                <span id=\"projectOpening\" ref={ref} className=\"justify-content-center text-light mt-5\">my works</span>\r\n            </FadeIn>\r\n            <div className=\"row blockquote bg-light mt-3 p-2\">\r\n                <div className=\"col-md-6 p-2\">\r\n                    <img src={img1} className=\"img-rounded img-fluid\" alt=\"Project Screenshot\" />\r\n                </div>\r\n                <div className=\"col-md-6 p-3\">\r\n                    <h2 className=\"mb-1\">CBT - Anasihin</h2>\r\n                    <div className=\"d-flex mb-2\" id=\"tags\">\r\n                        {tags.map(tag => <h3 key={tag} className=\"pr-2\">{tag}</h3>)}\r\n                    </div>\r\n                    <blockquote className=\"blockquote text-justify\">\r\n                        <p>\r\n                            (<strong>CBT</strong>) Computer Based Test is a web based application for create a live online test or quiz,\r\n                            based on <a href=\"https://cbtcandy.com/\">CandyCBT </a>and programmed for An-Nasihin Senior High School.\r\n                        </p>\r\n\r\n                        <MoreDescription />\r\n\r\n                        <p>\r\n                            You can get this repository at <a href=\"https://github.com/rian-ahmad/CBT-Candy_An-Nasihin\">github</a>\r\n                        </p>\r\n\r\n                        <footer className=\"blockquote-footer small text-muted\">My very first project</footer>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Content;"],"sourceRoot":""}